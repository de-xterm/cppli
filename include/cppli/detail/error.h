
#pragma once

#include <stdexcept>

namespace cppli {
    class cli_error;

    namespace detail {
        class error : public std::runtime_error {
        public:
            error(const char* what) : std::runtime_error(what) {}
            error(const std::string& what) : std::runtime_error(what) {}
        };
    }

    /// for errors that are generated by the actual application code (as opposed to cli_errors, which are generated by cppli)
    /// if not caught by the application, results in exit code 1 being returned from cppli::run()
    class application_error : public detail::error {
    public:
        application_error(const char* what)        : detail::error(what) {}
        application_error(const std::string& what) : detail::error(what) {}
    };
}